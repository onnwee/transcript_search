services:
    transcript_pg:
        image: postgres:15
        container_name: transcript_pg
        restart: unless-stopped
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: transcripts
        ports:
            - '5432:5432'
        volumes:
            - pg_data:/var/lib/postgresql/data
        healthcheck:
            test: ['CMD', 'pg_isready', '-U', 'postgres']
            interval: 2s
            timeout: 2s
            retries: 10

    meilisearch:
        image: getmeili/meilisearch:v1.6
        container_name: meilisearch
        restart: unless-stopped
        environment:
            MEILI_MASTER_KEY: masterKey
        ports:
            - '7700:7700'
        volumes:
            - meili_data:/meili_data

    punctuator:
        build:
            context: ./punctuator
            dockerfile: Dockerfile
        container_name: punctuator
        ports:
            - '8000:8000'
        restart: unless-stopped
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://localhost:8000/health']
            interval: 10s
            timeout: 5s
            start_period: 60s
            retries: 5
        volumes:
            - ./punctuator:/app
        command: python server.py
        environment:
            - PUNCTUATOR_MODEL_PATH=/app/punctuator_model
            - PUNCTUATOR_MODEL_NAME=punctuator_model
            - PUNCTUATOR_MODEL_TYPE=punctuator
            - PUNCTUATOR_MODEL_VERSION=latest
            - PUNCTUATOR_MODEL_URL=http://localhost:8000/health
            - PUNCTUATOR_MODEL_PORT=8000

    backend: # Go API server
        build:
            context: .
            dockerfile: Dockerfile.backend
        container_name: transcript_search-backend
        ports:
            - '3000:3000'
        depends_on:
            transcript_pg:
                condition: service_healthy
            punctuator:
                condition: service_healthy
        environment:
            DATABASE_URL: ${DATABASE_URL}
            YOUTUBE_API_KEY: ${YOUTUBE_API_KEY}
            YOUTUBE_CHANNEL_ID: ${YOUTUBE_CHANNEL_ID}
            PUNCTUATOR_URL: 'http://punctuator:8000'
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://localhost:3000/api/health']
            interval: 10s
            timeout: 5s
            retries: 3

    ingest: # Node tools, stays idle unless called
        build:
            context: .
            dockerfile: Dockerfile.ingest
        container_name: transcript_search-ingest
        depends_on:
            backend:
                condition: service_healthy
        environment:
            DATABASE_URL: ${DATABASE_URL}
            YOUTUBE_API_KEY: ${YOUTUBE_API_KEY}
            YOUTUBE_CHANNEL_ID: ${YOUTUBE_CHANNEL_ID}
            PUNCTUATOR_URL: 'http://punctuator:8000'
        command: sleep infinity
        healthcheck:
            test: ['CMD', 'node', '--version']
            interval: 30s
            timeout: 5s
            retries: 2

    batch: # One-shot ingestion job
        build:
            context: .
            dockerfile: Dockerfile.ingest
        command: ['node', 'ingest/batch.js']
        depends_on:
            ingest:
                condition: service_healthy
            meilisearch:
                condition: service_started
        restart: 'no'
volumes:
    pg_data:
    meili_data:
    transcript_search_llama_settings:
